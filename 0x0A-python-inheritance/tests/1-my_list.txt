====================
-MyList module-
====================

-Import=
========
    >>> MyList = __import__('1-my_list').MyList


-Function Description-
======================
Write a class MyList that inherits from list.


-Operation-
===========
â€¢ Public instance method: def print_sorted(self): that prints the list, but sorted (ascending sort)

â€¢ You can assume that all the elements of the list will be of type int

-Tests-
=======

Test case #0: Testing positive ints only

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Test case #1: Testing negative and positive ints

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(-2)
    >>> my_list.append(-3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [-3, -2, 1, 4, 5]

Test case #2: Testing negative ints only

    >>> my_list = MyList()
    >>> my_list.append(-1)
    >>> my_list.append(-4)
    >>> my_list.append(-2)
    >>> my_list.append(-3)
    >>> my_list.append(-5)
    >>> my_list.print_sorted()
    [-5, -4, -3, -2, -1]

Test case #3: Testing string case

    >>> my_list = MyList("string")

    >>> my_list
    ['s', 't', 'r', 'i', 'n', 'g']

    >>> my_list.print_sorted()
    ['g', 'i', 'n', 'r', 's', 't']

    >>> print(my_list)
    ['s', 't', 'r', 'i', 'n', 'g']

Test case #4: Testing declaration list

    >>> my_list = MyList([1, 2, 1])

    >>> my_list
    [1, 2, 1]

    >>> my_list.print_sorted()
    [1, 1, 2]
